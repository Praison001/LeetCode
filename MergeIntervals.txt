
Given a collection of intervals, merge all overlapping intervals.

Example 1:

Input: [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].
Example 2:

Input: [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.

Just go through the intervals sorted by start coordinate and either combine the current interval with the previous one if they overlap, 
or add it to the res by itself if they don't.

class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        res= []
        for i in sorted(intervals, key=lambda i:i[0]):
            if res and i[0]<=res[-1][-1]:
                res[-1][-1]= max(res[-1][-1], i[-1])
            else:
                res+=[i]
        return res
                