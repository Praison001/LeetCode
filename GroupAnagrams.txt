Given an array of strings, group anagrams together.

Example:

Input: ["eat", "tea", "tan", "ate", "nat", "bat"],
Output:
[
  ["ate","eat","tea"],
  ["nat","tan"],
  ["bat"]
]
Note:

All inputs will be in lowercase.
The order of your output does not matter.

Complexity Analysis

Time Complexity: O(NKlogK), where N is the length of strs, 
and K is the maximum length of a string in strs. 
The outer loop has complexity O(N) as we iterate through each string. 
Then, we sort each string in O(KlogK) time.

Space Complexity: O(NK)O(NK), the total information content stored in ans.

class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
      anagrams = defaultdict(list)
      for word in strs:
        anagrams[''.join(sorted(word))].append(word)
      return list(anagrams.values())