Given a string containing just the characters '(', ')', '{', '}', '[' and ']', 
determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

Implement this solution in the IDE to understand it step by step

class Solution:
    def isValid(self, s: str) -> bool:
        mapping= {"(" : ")", "{" : "}", "[": "]"}
        stack= []
        for i in s:
            if i in mapping:
                stack.append(i)
            elif not stack or i!=mapping[stack.pop()]: #elements are popped off in this step already from the stack
                return False
        return not stack